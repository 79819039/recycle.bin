#!/bin/bash
# Usage:
# start|stop|restart|buttonstart|empty|update|purge|weekly|browse|clear.
#

vfs_recycle_start()
{
	logger "Starting Recycle Bin" -t"$PROG_NAME"

	# Is vfs_recycle running?
	if [ ! -e /var/run/recycle.bin/recycle.bin.pid ]; then
		echo "Starting Recycle Bin..."

		# Add vfs_recycle to smb-extra.conf.
		printf "\n" >> /boot/config/smb-extra.conf
		cat /boot/config/plugins/recycle.bin/config/smb-extra.conf >> /boot/config/smb-extra.conf

		# If weekly run is enabled, add cron job to dynamix.
		if [ $WEEKLYRUN = "yes" ]; then
			printf "# Purge recycle bin at 3:00 on the first day of the week:\n" > /boot/config/plugins/dynamix/recyclebin.cron
			printf "0 3 * * 0 /usr/local/emhttp/plugins/recycle.bin/scripts/rc.recycle.bin weekly &> /dev/null\n\n" >> /boot/config/plugins/dynamix/recyclebin.cron
			# Reload dynamix crons.
			/usr/local/sbin/update_cron
		fi

		# Restart samba.
		/etc/rc.d/rc.samba restart 2>&1 >/dev/null
	
		# Create pid file to show the recycle bin is running.
		echo "Running" > /var/run/recycle.bin/recycle.bin.pid

		echo "Recycle Bin started..."
		logger "Recycle Bin started" -t"$PROG_NAME"
	else
		echo "Recycle Bin is already running..."
		logger "Recycle Bin is already running" -t"$PROG_NAME"
	fi
}
	
vfs_recycle_stop()
{
	logger "Stopping Recycle Bin" -t"$PROG_NAME"

	# Is vfs_recycle running?
	if [ -e /var/run/recycle.bin/recycle.bin.pid ]; then
		echo "Stopping Recycle Bin..."

		# Remove dynamix recycle bin cron file.
		rm -f /boot/config/plugins/dynamix/recyclebin.cron

		# Reload dynamix crons.
		/usr/local/sbin/update_cron

		# Remove vfs_recycle from smb-extra.conf.
		sed '/#vfs_recycle_start/,/#vfs_recycle_end/d' /boot/config/smb-extra.conf >> smb.tmp
		printf %s "$(< smb.tmp)" > /boot/config/smb-extra.conf
		rm -f smb.tmp

		# Restart samba.
		/etc/rc.d/rc.samba restart 2>&1 >/dev/null

		# Remove pid file to show recycle bin is not running.
		rm -f /var/run/recycle.bin/recycle.bin.pid

		echo "Recycle Bin stopped..."
		logger "Recycle Bin stopped" -t"$PROG_NAME"
	else
		echo "Recycle Bin is not running..."
		logger "Recycle Bin is not running" -t"$PROG_NAME"
	fi
}

vfs_recycle_restart()
{
	vfs_recycle_stop
	vfs_recycle_start
}

vfs_recycle_buttonstart()
{
	echo "Enabling Recycle Bin..."
	if [ -f $CONFIG ]; then
		sed -i "s/"disable"/"enable/"" $CONFIG
		vfs_recycle_start
	fi
}

vfs_recycle_update()
{
	# Stop vfs recycle.
	vfs_recycle_stop

	# Adjust smb-extra.conf user set parameters.
	if [ $LOG = "yes" ]; then
		sed -i "/vfs objects =/c\   vfs objects = extd_audit recycle" /boot/config/plugins/recycle.bin/config/smb-extra.conf
		sed -i "/syslog only =/c\   syslog only = No" /boot/config/plugins/recycle.bin/config/smb-extra.conf
	else
		sed -i "/vfs objects =/c\   vfs objects = recycle" /boot/config/plugins/recycle.bin/config/smb-extra.conf
		sed -i "/syslog only =/c\   syslog only = Yes" /boot/config/plugins/recycle.bin/config/smb-extra.conf
	fi
	sed -i "/recycle:exclude =/c\   recycle:exclude = $EXCLUDE" /boot/config/plugins/recycle.bin/config/smb-extra.conf
	sed -i "/recycle:repository =/c\   recycle:repository = %P/.Recycle.Bin/$PARAMETERS" /boot/config/plugins/recycle.bin/config/smb-extra.conf

	# Start vfs recycle if service is enabled and not already running.
	if [ $SERVICE = "enable" ]; then
		vfs_recycle_start
	fi
}

vfs_recycle_empty()
{
	echo "Emptying Recycle Bin..."

	# Remove deleted files from all shares.
	rm -rf /mnt/user/*/.Recycle.Bin/*
	rm -rf /mnt/disk*/.Recycle.Bin/*
	rm -rf /mnt/disks/*/.Recycle.Bin/*
	rm -rf /mnt/cache/.Recycle.Bin/*
	rm -rf /boot/.Recycle.Bin/*

	echo "Recycle Bin has been emptied..."
	logger "User: Recycle Bin has been emptied" -t"$PROG_NAME"
}	

vfs_recycle_remove()
{
	# Remove aged files.
	find /mnt/user/*/.Recycle.Bin/* -mtime +$AGE -exec rm -rf {} \; 2>/dev/null
	find /mnt/disk*/.Recycle.Bin/* -mtime +$AGE -exec rm -rf {} \; 2>/dev/null
	find /mnt/disks/*/.Recycle.Bin/* -mtime +$AGE -exec rm -rf {} \; 2>/dev/null
	find /mnt/cache/.Recycle.Bin/* -mtime +$AGE -exec rm -rf {} \; 2>/dev/null
	find /boot/.Recycle.Bin/* -mtime +$AGE -exec rm -rf {} \; 2>/dev/null
}

vfs_recycle_purge()
{
	echo "Removing aged files..."

	vfs_recycle_remove

	echo "Aged files removed..."
	logger "User: Files older than $AGE days have been removed" -t"$PROG_NAME"
}

vfs_recycle_weekly()
{
	vfs_recycle_remove

	logger "Weekly: Files older than $AGE days have been removed" -t"$PROG_NAME"

	if [ $NOTIFY = "yes" ]; then
		/usr/local/emhttp/webGui/scripts/notify -e "unRAID Server Notice" -s "Recycle Bin" -d "Weekly: Files older than $AGE days have been removed" -i "normal"
	fi
}

vfs_recycle_browse()
{
	# Remove browsing directory.
	rm -rf /mnt/RecycleBin

	# Recycle bin browsing directory contains symlinks to shares.
	cd /tmp

	# Set up browsing directories for symlinks.
	mkdir RecycleBin
	mkdir RecycleBin/Disk
	mkdir RecycleBin/User
	mkdir RecycleBin/Unassigned

	# Disk, unassigned, and cache symlinks.
	DIRS=`ls /mnt/`
	for DIR in $DIRS
	do
		if [ "${DIR}" = "disks" ]; then
			ls /mnt/disks | while read line
			do
				ln -sf /mnt/disks/"${line}"/.Recycle.Bin RecycleBin/Unassigned/"${line}"
			done
		elif [ "${DIR}" = "cache" ]; then
			ln -sf /mnt/cache/.Recycle.Bin RecycleBin/Cache
		elif [ "${DIR}" = "user" ]; then
			ls /mnt/user | while read line
			do
				ln -sf /mnt/user/"${line}"/.Recycle.Bin RecycleBin/User/"${line}"
			done
		elif [ "${DIR}" != "user0" ]; then
			ln -sf /mnt/${DIR}/.Recycle.Bin RecycleBin/Disk/${DIR}
		fi
	done

	# Flash symlink.
	ln -sf /boot/.Recycle.Bin RecycleBin/Flash

	# Move the RecycleBin to /mnt.
	mv /tmp/RecycleBin /mnt/RecycleBin
}

vfs_recycle_clear() {
	# Clear the samba log.
	echo "" > /var/log/samba/log.smbd
}

# read our configuration.
CONFIG="/boot/config/plugins/recycle.bin/recycle.bin.cfg"
source $CONFIG
PROG_NAME="Recycle Bin"

case "$1" in
	'start')
		vfs_recycle_start
	;;
	'stop')
		vfs_recycle_stop
	;;
	'restart')
		vfs_recycle_restart
	;;
	'buttonstart')
		vfs_recycle_buttonstart
	;;
	'empty')
		vfs_recycle_empty
	;;
	'update')
		vfs_recycle_update
	;;
	'purge')
		vfs_recycle_purge
	;;
	'weekly')
		vfs_recycle_weekly
	;;
	'browse')
		vfs_recycle_browse
	;;
	'clear')
		vfs_recycle_clear
	;;
	*)
		echo "usage $0 start|stop|restart|buttonstart|empty|update|purge|weekly|browse|clear"
esac
